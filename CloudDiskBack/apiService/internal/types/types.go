// Code generated by goctl. DO NOT EDIT.
package types

type LoginRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refresh_token"`
	Success      bool   `json:"success"`
}

type MailCodeSendRequest struct {
	Email string `json:"email"`
}

type MailCodeSendResponse struct {
	Success bool `json:"success"`
}

type UserRegisterRequest struct {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterResponse struct {
	Success bool `json:"success"`
}

type ShareBasicDetailRequest struct {
	Identity string `json:"identity"`
}

type ShareBasicDetailResponse struct {
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Path               string `json:"path"`
}

type UserDetailRequest struct {
}

type UserDetailResponse struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type UserNameUpdateRequest struct {
	NewName string `json:"name"`
}

type UserNameUpdateResponse struct {
	Success bool `json:"success"`
}

type FileUploadRequest struct {
	ParentId int    `json:"parent_id,optional"`
	Hash     string `json:"hash,optional"`
	Name     string `json:"name,optional"`
	Ext      string `json:"ext,optional"`
	Size     int64  `json:"size,optional"`
}

type FileUploadResponse struct {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
	Success  bool   `json:"success"`
}

type UserFileListRequest struct {
	Id int64 `json:"id,optional"`
}

type UserFileListResponse struct {
	FilesList  []UserFile `json:"files_list,optional"`
	FolderList []UserFile `json:"folder_list,optional"`
	FilesNum   int        `json:"files_num"`
	FolderNum  int        `json:"folder_num"`
	Success    bool       `json:"success"`
}

type UserFile struct {
	Id                 int64  `json:"id"`
	ParentId           int64  `json:"parent_id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int64  `json:"size"`
	Node               string `json:"node"`
	Path               string `json:"path"`
	FileType           string `json:"filetype"`
}

type GetFileDetailRequest struct {
	Id int `json:"id"`
}

type GetFileDetailResponse struct {
	Name       string `json:"name"`
	Size       int64  `json:"size"`
	FileType   string `json:"filetype"`
	CreateTime string `json:"create_time"`
	UpdateTime string `json:"update_time"`
	Success    bool   `json:"success"`
}

type UserFolderListRequest struct {
}

type UserFolderListResponse struct {
	FolderList []*UserFile `json:"folder_list"`
	Success    bool        `json:"success"`
}

type UserFileNameUpdateRequest struct {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateResponse struct {
	Success bool   `json:"success"`
	Name    string `json:"name"`
}

type UserFolderCreateRequest struct {
	ParentId int64  `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateResponse struct {
	Identity string `json:"identity"`
	Success  bool   `json:"success"`
}

type UserFileDeleteRequest struct {
	Identity string `json:"identity"`
}

type UserFileDeleteResponse struct {
	Success bool `json:"success"`
}

type UserFileMoveRequest struct {
	Id       int `json:"id"`
	ParentId int `json:"parent_id"`
}

type UserFileMoveResponse struct {
	Success bool `json:"success"`
}

type GetCurrentParentIdRequest struct {
	Id int `json:"id"`
}

type GetCurrentParentIdResponse struct {
	ParentId int  `json:"parent_id"`
	Success  bool `json:"success"`
}

type FileUploadPrepareRequest struct {
	MD5      string `json:"md5"`
	Name     string `json:"name"`
	ParentId int    `json:"parent_id"`
}

type FileUploadPrepareResponse struct {
	UploadId     string `json:"upload_id"`
	Key          string `json:"key"`
	Node         string `json:"node"`
	FileIdentity string `json:"file_identity"`
	Success      bool   `json:"success"`
}

type FileUploadChunkRequest struct {
	Key        string `json:"key,optional"`
	UploadId   string `json:"upload_id,optional"`
	PartNumber int    `json:"part_number,optional"`
	Node       string `json:"node,optional"`
}

type FileUploadChunkResponse struct {
	Etag    string `json:"etag"` // MD5
	Success bool   `json:"success"`
}

type FileUploadChunkCompleteRequest struct {
	Key          string      `json:"key,optional"`
	UploadId     string      `json:"upload_id,optional"`
	ObsObjects   []ObsObject `json:"obs_objects,optional"`
	ParentId     int         `json:"parent_id,optional"`
	Hash         string      `json:"hash,optional"`
	Name         string      `json:"name,optional"`
	Size         int64       `json:"size,optional"`
	Node         string      `json:"node,optional"`
	FileIdentity string      `json:"file_identity,optional"`
}

type FileUploadChunkCompleteResponse struct {
	Success bool `json:"success"`
}

type ObsObject struct {
	PartNumber int    `json:"part_number"`
	ETag       string `json:"etag"`
}

type GetFilePathRequest struct {
	RepositoryIdentity string `json:"repository_identity"`
	Ext                string `json:"ext"`
}

type GetFilePathResponse struct {
	Path    string `json:"path"`
	Success bool   `json:"success"`
}
