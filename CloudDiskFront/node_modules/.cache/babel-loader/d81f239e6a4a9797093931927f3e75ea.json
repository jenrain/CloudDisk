{"ast":null,"code":"import CryptoJs from 'crypto-js';\nimport encHex from 'crypto-js/enc-hex';\nimport SparkMD5 from \"spark-md5\";\nexport default {\n  name: \"FunctionBar\",\n\n  data() {\n    return {\n      isCreateAble: true,\n      // 上传按钮是否是加载状态\n      isUploadBtnLoading: false,\n      // 是否显示多选操作按钮\n      isMultBtnsShow: false,\n      // 搜索内容\n      searchContent: \"\",\n      // 上传文件的hash值\n      fileHash: \"\"\n    };\n  },\n\n  props: {\n    listData: {\n      type: Array,\n\n      default() {\n        return [];\n      }\n\n    },\n    searchFolder: {\n      type: Array,\n\n      default() {\n        return [];\n      }\n\n    },\n    // functionbar的类型 file collect\n    barType: {\n      type: String,\n\n      default() {\n        return \"file\";\n      }\n\n    }\n  },\n  methods: {\n    refresh() {// this.isSelectAll = !this.isSelectAll;\n      // this.$store.commit(\"updateIsSelectAll\", this.isSelectAll);\n    },\n\n    // 点击新建的回调\n    createFolder() {\n      // 先禁用新建按钮，避免重复点击\n      this.isCreateAble = false; // 更新新建文件夹状态到vuex\n\n      this.$store.commit(\"updateIsCreateFolder\", true);\n    },\n\n    // 上传文件\n    uploadFiles(params) {\n      // console.log(\"文件大小：\", (file.size / 1048576).toFixed(2) + \"MB\");\n      if ((params.file.size / 1048576).toFixed(2) <= 5) {\n        this.commonUpload(params.file);\n      } else {\n        console.log(\"开始分片上传\");\n        this.fileToMD5(params.file);\n        setTimeout(() => {// console.log(\"文件hash：\", this.fileHash);\n        }, 300);\n      }\n    },\n\n    commonUpload(file) {\n      console.log(\"开始普通上传文件\");\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"parent_id\", this.$store.state.currentParentId);\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n      this.$axios({\n        url: \"/file/upload\",\n        method: \"post\",\n        data: formData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n          this.$axios({\n            url: \"/user/file/list\",\n            method: \"post\",\n            data: {\n              id: this.$store.state.currentParentId\n            }\n          }).then(res => {\n            console.log(res.data);\n\n            if (res.data.success) {\n              this.$emit(\"update:listData\", res.data.files_list);\n            } else {\n              this.$message.error(res.data.msg);\n            }\n          });\n          this.$message.success(\"文件上传成功!\");\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      });\n    },\n\n    chunkUpload(file) {},\n\n    chunkUploadPrepare(md5, name, parent_id) {\n      // MD5      string `json:\"md5\"`\n      // Name     string `json:\"name\"`\n      // ParentId int    `json:\"parent_id\"`\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n      this.$axios({\n        url: \"/file/upload/prepare\",\n        method: \"post\",\n        data: {\n          md5: md5,\n          name: name,\n          parent_id: parent_id\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          let index = this.listData.findIndex(item => item.id == this.rightClickItem.id);\n          this.listData.splice(index, 1);\n          this.$message.success(\"删除成功!\");\n        } else {\n          this.$message.error(\"删除失败,请稍后重试!\");\n        }\n      });\n    },\n\n    chunkUploadStart() {},\n\n    chunkUploadComplete() {},\n\n    // 返回上一级文件夹\n    goLastFolder() {\n      console.log(\"返回上一级\");\n      this.$store.commit(\"updateCurrentParentId\", this.$store.state.lastParentId);\n      console.log(\"currentParentId: \", this.$store.state.currentParentId);\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n      this.$axios({\n        url: \"/user/file/list\",\n        method: \"post\",\n        data: {\n          id: this.$store.state.currentParentId\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          this.$emit(\"update:listData\", res.data.files_list);\n          this.$emit(\"update:searchFolder\", res.data.folder_list); // 获取当前父目录的ParentId，就是LastParentId\n\n          this.$axios({\n            url: \"/file/parentid/get\",\n            method: \"post\",\n            data: {\n              id: this.$store.state.currentParentId\n            }\n          }).then(res => {\n            console.log(res.data);\n\n            if (res.data.success) {\n              this.$store.commit(\"updateLastParentId\", res.data.parent_id);\n            } else {\n              this.$message.error(res.data.msg);\n            }\n          });\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      });\n    },\n\n    // 返回根目录\n    goRootFolder() {\n      console.log(\"回到根目录\");\n      this.$store.commit(\"updateCurrentParentId\", 0);\n      this.$store.commit(\"updateLastParentId\", 0);\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n      this.$axios({\n        url: \"/user/file/list\",\n        method: \"post\",\n        data: {\n          id: this.$store.state.currentParentId\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          this.$emit(\"update:listData\", res.data.files_list);\n          this.$emit(\"update:searchFolder\", res.data.folder_list);\n        } else {\n          this.$message.error(\"文件请求失败\");\n        }\n      });\n    },\n\n    // 点击切换展示类型\n    changeShowType() {\n      if (this.$store.state.showType == \"icon\") {\n        // this.showType = \"table\";\n        // this.$emit(\"changShowType\", \"table\");\n        this.$store.commit(\"updateShowType\", \"table\");\n      } else {\n        // this.showType = \"icon\";\n        // this.$emit(\"changShowType\", \"icon\");\n        this.$store.commit(\"updateShowType\", \"icon\");\n      }\n    },\n\n    fileToMD5(file) {\n      const fileReader = new FileReader();\n      fileReader.readAsBinaryString(file);\n\n      fileReader.onload = e => {\n        this.fileHash = SparkMD5.hashBinary(e.target.result);\n      };\n    }\n\n  },\n  watch: {\n    // 监听是否正在创建文件夹\n    \"$store.state.isCreateFolder\"(current) {\n      if (current == false) {\n        this.isCreateAble = true;\n      }\n    },\n\n    \"$store.state.selectFiles\"(current) {\n      if (current.length > 0) {\n        this.isMultBtnsShow = true;\n      } else {\n        this.isMultBtnsShow = false;\n      }\n    }\n\n  },\n\n  created() {}\n\n};","map":{"version":3,"mappings":"AA+DA;AACA;AACA;AACA;EACAA,mBADA;;EAEAC;IACA;MACAC,kBADA;MAEA;MACAC,yBAHA;MAIA;MACAC,qBALA;MAMA;MACAC,iBAPA;MAQA;MACAC;IATA;EAWA,CAdA;;EAeAC;IACAC;MACAC,WADA;;MAEAC;QACA;MACA;;IAJA,CADA;IAOAC;MACAF,WADA;;MAEAC;QACA;MACA;;IAJA,CAPA;IAaA;IACAE;MACAH,YADA;;MAEAC;QACA;MACA;;IAJA;EAdA,CAfA;EAoCAG;IACAC,WACA;MACA;IACA,CAJA;;IAKA;IACAC;MACA;MACA,0BAFA,CAGA;;MACA;IACA,CAXA;;IAYA;IACAC;MACA;MACA;QACA;MACA,CAFA,MAEA;QACAC;QACA;QACAC,kBACA;QAEA,CAHA,EAGA,GAHA;MAIA;IACA,CAzBA;;IA0BAC;MACAF;MACA;MACAG;MACAA;MACA,uDACAC,oCADA;MAEA;QACAC,mBADA;QAEAC,cAFA;QAGAtB,cAHA;QAIAuB;UACA;QADA;MAJA,GAOAC,IAPA,CAOAC;QACAT;;QACA;UACA;UACA;YACAK,sBADA;YAEAC,cAFA;YAGAtB;cACA0B;YADA;UAHA,GAMAF,IANA,CAMAC;YACAT;;YACA;cACA;YACA,CAFA,MAEA;cACA;YACA;UACA,CAbA;UAcA;QACA,CAjBA,MAiBA;UACA;QACA;MACA,CA7BA;IA8BA,CA/DA;;IAgEAW,mBAEA,CAlEA;;IAmEAC;MACA;MACA;MACA;MACA,uDACAR,oCADA;MAEA;QACAC,2BADA;QAEAC,cAFA;QAGAtB;UACA6B,QADA;UAEA9B,UAFA;UAGA+B;QAHA;MAHA,GAQAN,IARA,CAQAC;QACAT;;QACA;UACA,oCACAe,yCADA;UAGA;UACA;QACA,CANA,MAMA;UACA;QACA;MACA,CAnBA;IAoBA,CA7FA;;IA8FAC,oBAEA,CAhGA;;IAiGAC,uBAEA,CAnGA;;IAsGA;IACAC;MACAlB;MACA,mBACA,uBADA,EAEA,8BAFA;MAIAA;MACA,uDACAI,oCADA;MAEA;QACAC,sBADA;QAEAC,cAFA;QAGAtB;UACA0B;QADA;MAHA,GAMAF,IANA,CAMAC;QACAT;;QACA;UACA;UACA,wDAFA,CAGA;;UACA;YACAK,yBADA;YAEAC,cAFA;YAGAtB;cACA0B;YADA;UAHA,GAMAF,IANA,CAMAC;YACAT;;YACA;cACA;YACA,CAFA,MAEA;cACA;YACA;UACA,CAbA;QAcA,CAlBA,MAkBA;UACA;QACA;MACA,CA7BA;IA8BA,CA9IA;;IA+IA;IACAmB;MACAnB;MACA;MACA;MACA,uDACAI,oCADA;MAEA;QACAC,sBADA;QAEAC,cAFA;QAGAtB;UACA0B;QADA;MAHA,GAMAF,IANA,CAMAC;QACAT;;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAdA;IAeA,CArKA;;IAsKA;IACAoB;MACA;QACA;QACA;QACA;MACA,CAJA,MAIA;QACA;QACA;QACA;MACA;IACA,CAjLA;;IAkLAC;MACA;MACAC;;MACAA;QACA;MACA,CAFA;IAGA;;EAxLA,CApCA;EA+NAC;IAEA;IACA;MACA;QACA;MACA;IACA,CAPA;;IAQA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA;;EAdA,CA/NA;;EA+OAC;;AA/OA","names":["name","data","isCreateAble","isUploadBtnLoading","isMultBtnsShow","searchContent","fileHash","props","listData","type","default","searchFolder","barType","methods","refresh","createFolder","uploadFiles","console","setTimeout","commonUpload","formData","window","url","method","headers","then","res","id","chunkUpload","chunkUploadPrepare","md5","parent_id","item","chunkUploadStart","chunkUploadComplete","goLastFolder","goRootFolder","changeShowType","fileToMD5","fileReader","watch","created"],"sourceRoot":"src/components","sources":["FunctionBar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"FunctionBar\">\r\n      <div class=\"left\">\r\n        <el-upload\r\n          :show-file-list=\"false\"\r\n          multiple\r\n          action=\"\"\r\n          :http-request=\"uploadFiles\"\r\n          class=\"uploadButton\"\r\n        >\r\n          <el-button type=\"primary\" size=\"small\" class=\"upload\">\r\n            <i class=\"iconfont icon-yunshangchuan\"></i> 上传</el-button\r\n          >\r\n        </el-upload>\r\n        <el-button\r\n          size=\"small\"\r\n          class=\"create\"\r\n          @click=\"createFolder\"\r\n          :disabled=\"!isCreateAble\"\r\n        >\r\n          <i class=\"iconfont icon-add\"></i> 新建</el-button\r\n        >\r\n        <el-button\r\n          size=\"small\"\r\n          class=\"selectAll\"\r\n          :class=\"isSelectAll ? 'select' : ''\"\r\n          @click=\"refresh\"\r\n        >\r\n          <i class=\"el-icon-refresh\"></i>\r\n          刷新</el-button\r\n        >\r\n      </div>\r\n\r\n      <!-- 右边 -->\r\n      <div class=\"right\">\r\n        <div class=\"search\">\r\n          <el-input\r\n            placeholder=\"请输入内容\"\r\n            suffix-icon=\"el-icon-search\"\r\n            v-model=\"searchContent\"\r\n            @keyup.native.enter=\"$emit('goSearch', searchContent)\"\r\n          >\r\n          </el-input>\r\n        </div>\r\n      </div>\r\n      <div class=\"goLastFolder\" v-if=\"this.$store.state.currentParentId != 0\">\r\n        <el-button\r\n          @click=\"goLastFolder\"\r\n          type=\"info\"\r\n          icon=\"el-icon-arrow-left\"\r\n          size=\"mini\"\r\n          >上一级</el-button\r\n        >\r\n        <el-button @click=\"goRootFolder\" type=\"primary\" size=\"mini\"\r\n          >根目录 &nbsp;<i class=\"el-icon-s-home\"></i\r\n        ></el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CryptoJs from 'crypto-js'\r\nimport encHex from 'crypto-js/enc-hex'\r\nimport SparkMD5 from \"spark-md5\";\r\nexport default {\r\n  name: \"FunctionBar\",\r\n  data() {\r\n    return {\r\n      isCreateAble: true,\r\n      // 上传按钮是否是加载状态\r\n      isUploadBtnLoading: false,\r\n      // 是否显示多选操作按钮\r\n      isMultBtnsShow: false,\r\n      // 搜索内容\r\n      searchContent: \"\",\r\n      // 上传文件的hash值\r\n      fileHash: \"\",\r\n    };\r\n  },\r\n  props: {\r\n    listData: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    searchFolder: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    // functionbar的类型 file collect\r\n    barType: {\r\n      type: String,\r\n      default() {\r\n        return \"file\";\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    refresh() {\r\n      // this.isSelectAll = !this.isSelectAll;\r\n      // this.$store.commit(\"updateIsSelectAll\", this.isSelectAll);\r\n    },\r\n    // 点击新建的回调\r\n    createFolder() {\r\n      // 先禁用新建按钮，避免重复点击\r\n      this.isCreateAble = false;\r\n      // 更新新建文件夹状态到vuex\r\n      this.$store.commit(\"updateIsCreateFolder\", true);\r\n    },\r\n    // 上传文件\r\n    uploadFiles(params) {\r\n      // console.log(\"文件大小：\", (file.size / 1048576).toFixed(2) + \"MB\");\r\n      if (((params.file.size / 1048576).toFixed(2)) <= 5) {\r\n        this.commonUpload(params.file);\r\n      } else {\r\n        console.log(\"开始分片上传\");\r\n        this.fileToMD5(params.file)\r\n        setTimeout(() => {\r\n          // console.log(\"文件hash：\", this.fileHash);\r\n\r\n        },300);\r\n      }\r\n    },\r\n    commonUpload(file) {\r\n      console.log(\"开始普通上传文件\");\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"parent_id\", this.$store.state.currentParentId);\r\n      this.$axios.defaults.headers.common[\"Authorization\"] =\r\n      window.localStorage.getItem(\"token\");\r\n      this.$axios({\r\n        url: \"/file/upload\",\r\n        method: \"post\",\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.success) {\r\n          this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\r\n          this.$axios({\r\n            url: \"/user/file/list\",\r\n            method: \"post\",\r\n            data: {\r\n              id: this.$store.state.currentParentId,\r\n            }\r\n        }).then((res) => {\r\n          console.log(res.data);\r\n          if (res.data.success) {\r\n            this.$emit(\"update:listData\", res.data.files_list);\r\n          } else {\r\n            this.$message.error(res.data.msg);\r\n          }\r\n        });\r\n          this.$message.success(\"文件上传成功!\");\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    chunkUpload(file) {\r\n\r\n    },\r\n    chunkUploadPrepare(md5, name, parent_id) {\r\n      // MD5      string `json:\"md5\"`\r\n      // Name     string `json:\"name\"`\r\n      // ParentId int    `json:\"parent_id\"`\r\n      this.$axios.defaults.headers.common[\"Authorization\"] =\r\n        window.localStorage.getItem(\"token\");\r\n      this.$axios({\r\n        url: \"/file/upload/prepare\",\r\n        method: \"post\",\r\n        data: {\r\n          md5: md5,\r\n          name: name,\r\n          parent_id: parent_id,\r\n        },\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.success) {\r\n          let index = this.listData.findIndex(\r\n            (item) => item.id == this.rightClickItem.id\r\n          );\r\n          this.listData.splice(index, 1);\r\n          this.$message.success(\"删除成功!\");\r\n        } else {\r\n          this.$message.error(\"删除失败,请稍后重试!\");\r\n        }\r\n      });\r\n    },\r\n    chunkUploadStart() {\r\n\r\n    },\r\n    chunkUploadComplete() {\r\n\r\n    },\r\n    \r\n\r\n    // 返回上一级文件夹\r\n    goLastFolder() {\r\n      console.log(\"返回上一级\");\r\n      this.$store.commit(\r\n        \"updateCurrentParentId\",\r\n        this.$store.state.lastParentId\r\n      );\r\n      console.log(\"currentParentId: \", this.$store.state.currentParentId);\r\n      this.$axios.defaults.headers.common[\"Authorization\"] =\r\n        window.localStorage.getItem(\"token\");\r\n      this.$axios({\r\n        url: \"/user/file/list\",\r\n        method: \"post\",\r\n        data: {\r\n          id: this.$store.state.currentParentId,\r\n        },\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.success) {\r\n          this.$emit(\"update:listData\", res.data.files_list);\r\n          this.$emit(\"update:searchFolder\", res.data.folder_list);\r\n          // 获取当前父目录的ParentId，就是LastParentId\r\n          this.$axios({\r\n            url: \"/file/parentid/get\",\r\n            method: \"post\",\r\n            data: {\r\n              id: this.$store.state.currentParentId,\r\n            },\r\n          }).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data.success) {\r\n              this.$store.commit(\"updateLastParentId\", res.data.parent_id);\r\n            } else {\r\n              this.$message.error(res.data.msg);\r\n            }\r\n          });\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    // 返回根目录\r\n    goRootFolder() {\r\n      console.log(\"回到根目录\");\r\n      this.$store.commit(\"updateCurrentParentId\", 0);\r\n      this.$store.commit(\"updateLastParentId\", 0);\r\n      this.$axios.defaults.headers.common[\"Authorization\"] =\r\n        window.localStorage.getItem(\"token\");\r\n      this.$axios({\r\n        url: \"/user/file/list\",\r\n        method: \"post\",\r\n        data: {\r\n          id: this.$store.state.currentParentId,\r\n        },\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.success) {\r\n          this.$emit(\"update:listData\", res.data.files_list);\r\n          this.$emit(\"update:searchFolder\", res.data.folder_list);\r\n        } else {\r\n          this.$message.error(\"文件请求失败\");\r\n        }\r\n      });\r\n    },\r\n    // 点击切换展示类型\r\n    changeShowType() {\r\n      if (this.$store.state.showType == \"icon\") {\r\n        // this.showType = \"table\";\r\n        // this.$emit(\"changShowType\", \"table\");\r\n        this.$store.commit(\"updateShowType\", \"table\");\r\n      } else {\r\n        // this.showType = \"icon\";\r\n        // this.$emit(\"changShowType\", \"icon\");\r\n        this.$store.commit(\"updateShowType\", \"icon\");\r\n      }\r\n    },\r\n    fileToMD5(file) {\r\n        const fileReader = new FileReader()\r\n        fileReader.readAsBinaryString(file);\r\n         fileReader.onload = (e) => {\r\n          this.fileHash = SparkMD5.hashBinary(e.target.result);\r\n       }\r\n    },\r\n  },\r\n\r\n  watch: {\r\n\r\n    // 监听是否正在创建文件夹\r\n    \"$store.state.isCreateFolder\"(current) {\r\n      if (current == false) {\r\n        this.isCreateAble = true;\r\n      }\r\n    },\r\n    \"$store.state.selectFiles\"(current) {\r\n      if (current.length > 0) {\r\n        this.isMultBtnsShow = true;\r\n      } else {\r\n        this.isMultBtnsShow = false;\r\n      }\r\n    },\r\n  },\r\n  created() {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.FunctionBar {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: calc(100vw - 280px);\r\n  min-width: 980px;\r\n  /* background-color: pink; */\r\n  height: 80px;\r\n  padding: 25px 20px;\r\n  position: relative;\r\n  top: 0;\r\n  left: 0px;\r\n  z-index: 50;\r\n}\r\n\r\n.el-input /deep/ input {\r\n  width: 14vw;\r\n  border-radius: 30px;\r\n  height: 35px;\r\n  line-height: 35px;\r\n  background-color: #f1f2f3;\r\n  border: 1px solid #f1f2f3;\r\n}\r\n\r\n.el-input /deep/ i {\r\n  line-height: 35px !important;\r\n  color: #687176;\r\n}\r\n\r\n.right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.right i {\r\n  font-size: 20px;\r\n  color: #a0a0a0;\r\n  font-weight: bold;\r\n}\r\n\r\n.right > div {\r\n  margin-right: 15px;\r\n}\r\n\r\n.select {\r\n  background-color: #696bcc !important;\r\n  color: white !important;\r\n  border: 1px solid #696bcc !important;\r\n}\r\n\r\n.selectAll:hover {\r\n  background-color: #595bb3;\r\n  color: white;\r\n}\r\n\r\ni {\r\n  cursor: pointer;\r\n}\r\n\r\n.sortTypeItem {\r\n  font-size: 13px;\r\n  padding: 10px 0 10px 40px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  color: #595bb3;\r\n}\r\n\r\n.sortTypeItem i {\r\n  position: absolute;\r\n  left: 13px;\r\n  color: #595bb3;\r\n}\r\n\r\n.sortTypeItem:hover {\r\n  background-color: #efeff5;\r\n}\r\n\r\n.left {\r\n  display: flex;\r\n}\r\n\r\n.uploadButton {\r\n  margin-right: 10px;\r\n  /* padding-bottom: 20px; */\r\n  /* margin-bottom: 20px; */\r\n}\r\n\r\n.uploadProgress {\r\n  width: 230px;\r\n}\r\n\r\n.multButtons {\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  transform: scale(0.9);\r\n}\r\n\r\n.tips {\r\n  color: rgb(177, 177, 177);\r\n}\r\n\r\n.multButtonsContainer {\r\n  display: flex;\r\n  align-items: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  color: rgb(97, 97, 97);\r\n  margin-left: 10px;\r\n  overflow: hidden;\r\n}\r\n\r\n.multButtonsContainer div {\r\n  padding: 8px 15px;\r\n  border-right: 1px solid #ccc;\r\n  cursor: pointer;\r\n}\r\n\r\n.multButtonsContainer div:nth-last-child(1) {\r\n  border: none;\r\n}\r\n\r\n.multButtonsContainer div:hover {\r\n  background-color: #595bb3;\r\n  color: white;\r\n}\r\n\r\n.goLastFolder {\r\n  cursor: pointer;\r\n  color: #595bb3;\r\n  font-size: 10px;\r\n  margin-left: 20px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  margin-top: 20px;\r\n}\r\n\r\n.goLastFolder a {\r\n  /* margin: 0 5px; */\r\n  /* padding-top: 20px; */\r\n}\r\n\r\n.tableHead {\r\n  display: flex;\r\n  line-height: 50px;\r\n  height: 50px;\r\n  width: calc(100vw - 260px);\r\n  padding: 0 25px;\r\n  box-sizing: border-box;\r\n  font-size: 15px;\r\n}\r\n\r\n.tableName {\r\n  line-height: 43px;\r\n  width: 50%;\r\n}\r\n.tableHeadName {\r\n  width: calc(50% + 43px);\r\n  padding: 0;\r\n}\r\n\r\n.tableItemSize {\r\n  width: 20%;\r\n  padding-left: 80px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.tableItemCreateTime {\r\n  padding-left: 60px;\r\n  box-sizing: border-box;\r\n  width: 25%;\r\n}\r\n\r\n.tableCollect {\r\n  width: 10%;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}