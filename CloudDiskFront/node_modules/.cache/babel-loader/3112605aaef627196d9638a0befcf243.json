{"ast":null,"code":"import { handleTime } from \"../plugins/utils.js\";\nexport default {\n  name: \"MusicPlayer\",\n\n  data() {\n    return {\n      // 进度条长度\n      progress: 0,\n      // 播放状态\n      playState: false,\n      // 音乐信息\n      currentMusicInfo: {\n        path: \"\",\n        name: \"\",\n        singer: \"\",\n        // 当前音乐播放时长\n        duration: 0\n      },\n      //   当前播放时间\n      currentTime: 0,\n      // 音频url\n      audioUrl: \"\"\n    };\n  },\n\n  methods: {\n    changePlayState() {\n      this.playState = !this.playState;\n      let currentMusicPlayer = this.$refs.currentMusicPlayer;\n\n      if (this.playState) {\n        currentMusicPlayer.play();\n      } else {\n        currentMusicPlayer.pause();\n      }\n    },\n\n    // 监听播放进度\n    timeupdate() {\n      let time = this.$refs.currentMusicPlayer.currentTime;\n      time = Math.floor(time); //   该事件一秒调用4次，这里稍微做下节流\n\n      if (this.currentTime != time) {\n        this.currentTime = time; // console.log(time);\n        // 计算进度条的长度\n\n        this.progress = Math.floor(time / this.$refs.currentMusicPlayer.duration * 100); // console.log(this.progress);\n      }\n    },\n\n    // 拖动进度条的回调\n    changeProgress(e) {\n      //   console.log(e);\n      let time = Math.floor(e / 100 * this.$refs.currentMusicPlayer.duration);\n      this.$refs.currentMusicPlayer.currentTime = time;\n      this.currentTime = time;\n    },\n\n    // 播放结束的回调\n    endPlay() {\n      this.playState = false;\n      this.$store.commit(\"updateMusicPlayState\", false);\n    },\n\n    // 开始播放的回调\n    onPlay() {\n      this.playState = true;\n      this.$store.commit(\"updateMusicPlayState\", true);\n    },\n\n    // 暂停播放的回调\n    onPause() {\n      this.playState = false;\n      this.$store.commit(\"updateMusicPlayState\", false);\n    },\n\n    // 点击关闭音频播放器的回调\n    closeMusicPlayer() {\n      // 重置所有数据\n      this.currentMusic = {\n        path: \"\",\n        name: \"\",\n        singer: \"\",\n        duration: 0\n      };\n      this.progress = 0;\n      this.playState = false;\n      this.$store.commit(\"updateIsMusicPlayerShow\", false);\n      this.$store.commit(\"updateCurrentMusicInfo\", this.currentMusicInfo);\n      this.audioUrl = \"\";\n    },\n\n    // 获取音频的url\n    async getAudioUrl() {\n      this.audioUrl = this.currentMusicInfo.path;\n    }\n\n  },\n  watch: {\n    // 监听vuex中的当前音频播放信息\n    async \"$store.state.currentMusicInfo\"(current) {\n      this.currentMusicInfo = current;\n\n      if (this.$store.state.isMusicPlayerShow) {\n        this.getAudioUrl();\n        await this.$store.commit(\"updateIsMusicPlayerShow\", true);\n      }\n    },\n\n    // 监听当前音频播放状态\n    \"$store.state.musicPlayState\"(current) {\n      // 如果不相同 说明在组件之外有地方改变了播放状态，需要将播放状态更新至此组件\n      if (current != this.playState) {\n        this.playState = current;\n\n        if (current) {\n          this.$refs.currentMusicPlayer.play();\n        } else {\n          this.$refs.currentMusicPlayer.pause();\n        }\n      }\n    }\n\n  },\n  filters: {\n    handleTime\n  },\n\n  mounted() {\n    console.log(\"musicInfo: \", this.currentMusicInfo);\n  },\n\n  created() {}\n\n};","map":{"version":3,"mappings":"AAsDA;AAEA;EACAA,mBADA;;EAEAC;IACA;MACA;MACAC,WAFA;MAGA;MACAC,gBAJA;MAKA;MACAC;QACAC,QADA;QAEAL,QAFA;QAGAM,UAHA;QAIA;QACAC;MALA,CANA;MAaA;MACAC,cAdA;MAeA;MACAC;IAhBA;EAkBA,CArBA;;EAsBAC;IACAC;MACA;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA;IACA,CATA;;IAWA;IACAC;MACA;MACAC,wBAFA,CAGA;;MACA;QACA,wBADA,CAEA;QACA;;QACA,2BACAA,mDADA,EAJA,CAOA;MACA;IACA,CAzBA;;IA2BA;IACAC;MACA;MACA;MACA;MACA;IACA,CAjCA;;IAmCA;IACAC;MACA;MACA;IACA,CAvCA;;IAyCA;IACAC;MACA;MACA;IACA,CA7CA;;IA+CA;IACAC;MACA;MACA;IACA,CAnDA;;IAqDA;IACAC;MACA;MACA;QACAd,QADA;QAEAL,QAFA;QAGAM,UAHA;QAIAC;MAJA;MAMA;MACA;MACA;MACA;MACA;IACA,CAnEA;;IAqEA;IACA;MACA;IACA;;EAxEA,CAtBA;EAgGAa;IACA;IACA;MACA;;MACA;QACA;QACA;MACA;IACA,CARA;;IAUA;IACA;MACA;MACA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA;IACA;;EArBA,CAhGA;EAuHAC;IACAC;EADA,CAvHA;;EA0HAC;IACAC;EACA,CA5HA;;EA6HAC,WAEA;;AA/HA","names":["name","data","progress","playState","currentMusicInfo","path","singer","duration","currentTime","audioUrl","methods","changePlayState","currentMusicPlayer","timeupdate","time","changeProgress","endPlay","onPlay","onPause","closeMusicPlayer","watch","filters","handleTime","mounted","console","created"],"sourceRoot":"src/components","sources":["MusicPlayer.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"MusicPlayer\" v-if=\"isMusicDialogShow\">\r\n    <audio\r\n      :src=\"currentMusic.path\"\r\n      class=\"currentMusicPlayer\"\r\n      autoplay\r\n      @timeupdate=\"timeupdate\"\r\n      @play=\"onPlay\"\r\n      @pause=\"onPause\"\r\n      @ended=\"endPlay\"\r\n      ref=\"currentMusic\"\r\n    ></audio>\r\n    <div class=\"top\">\r\n      <div class=\"cover\">\r\n        <img src=\"../assets/img/cover.jpg\" alt=\"\" />\r\n        <div class=\"iconContainer\" @click=\"changePlayState\">\r\n          <i class=\"iconfont icon-play_nor\" v-if=\"!playState\"></i>\r\n          <i class=\"iconfont icon-pause_nor\" v-else></i>\r\n        </div>\r\n      </div>\r\n      <div class=\"musicInfo\">\r\n        <div class=\"musicName\">{{ currentMusic.name }}</div>\r\n        <div class=\"singer\">\r\n          {{\r\n            currentMusic.singer == \"\"\r\n              ? \"未知艺术家\"\r\n              : currentMusic.singer\r\n          }}\r\n        </div>\r\n      </div>\r\n      <i class=\"iconfont icon-close\" @click=\"closeMusicPlayer\"></i>\r\n    </div>\r\n    <div class=\"progressBar\">\r\n      <div\r\n        class=\"time\"\r\n        v-if=\"$refs.currentMusicPlayer && $refs.currentMusicPlayer.duration\"\r\n      >\r\n        {{ currentTime | handleTime }} /\r\n        {{\r\n          $refs.currentMusicPlayer &&\r\n          $refs.currentMusicPlayer.duration | handleTime\r\n        }}\r\n      </div>\r\n      <el-slider\r\n        v-model=\"progress\"\r\n        :show-tooltip=\"false\"\r\n        @change=\"changeProgress\"\r\n      ></el-slider>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleTime } from \"../plugins/utils.js\";\r\n\r\nexport default {\r\n  name: \"MusicPlayer\",\r\n  data() {\r\n    return {\r\n      // 进度条长度\r\n      progress: 0,\r\n      // 播放状态\r\n      playState: false,\r\n      // 音乐信息\r\n      currentMusicInfo: {\r\n        path: \"\",\r\n        name: \"\",\r\n        singer: \"\",\r\n        // 当前音乐播放时长\r\n        duration: 0,\r\n      },\r\n      //   当前播放时间\r\n      currentTime: 0,\r\n      // 音频url\r\n      audioUrl: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    changePlayState() {\r\n      this.playState = !this.playState;\r\n      let currentMusicPlayer = this.$refs.currentMusicPlayer;\r\n      if (this.playState) {\r\n        currentMusicPlayer.play();\r\n      } else {\r\n        currentMusicPlayer.pause();\r\n      }\r\n    },\r\n\r\n    // 监听播放进度\r\n    timeupdate() {\r\n      let time = this.$refs.currentMusicPlayer.currentTime;\r\n      time = Math.floor(time);\r\n      //   该事件一秒调用4次，这里稍微做下节流\r\n      if (this.currentTime != time) {\r\n        this.currentTime = time;\r\n        // console.log(time);\r\n        // 计算进度条的长度\r\n        this.progress = Math.floor(\r\n          (time / this.$refs.currentMusicPlayer.duration) * 100\r\n        );\r\n        // console.log(this.progress);\r\n      }\r\n    },\r\n\r\n    // 拖动进度条的回调\r\n    changeProgress(e) {\r\n      //   console.log(e);\r\n      let time = Math.floor((e / 100) * this.$refs.currentMusicPlayer.duration);\r\n      this.$refs.currentMusicPlayer.currentTime = time;\r\n      this.currentTime = time;\r\n    },\r\n\r\n    // 播放结束的回调\r\n    endPlay() {\r\n      this.playState = false;\r\n      this.$store.commit(\"updateMusicPlayState\", false);\r\n    },\r\n\r\n    // 开始播放的回调\r\n    onPlay() {\r\n      this.playState = true;\r\n      this.$store.commit(\"updateMusicPlayState\", true);\r\n    },\r\n\r\n    // 暂停播放的回调\r\n    onPause() {\r\n      this.playState = false;\r\n      this.$store.commit(\"updateMusicPlayState\", false);\r\n    },\r\n\r\n    // 点击关闭音频播放器的回调\r\n    closeMusicPlayer() {\r\n      // 重置所有数据\r\n      this.currentMusic = {\r\n        path: \"\",\r\n        name: \"\",\r\n        singer: \"\",\r\n        duration: 0,\r\n      };\r\n      this.progress = 0;\r\n      this.playState = false;\r\n      this.$store.commit(\"updateIsMusicPlayerShow\", false);\r\n      this.$store.commit(\"updateCurrentMusicInfo\", this.currentMusicInfo);\r\n      this.audioUrl = \"\";\r\n    },\r\n\r\n    // 获取音频的url\r\n    async getAudioUrl() {\r\n      this.audioUrl = this.currentMusicInfo.path;\r\n    },\r\n  },\r\n  watch: {\r\n    // 监听vuex中的当前音频播放信息\r\n    async \"$store.state.currentMusicInfo\"(current) {\r\n      this.currentMusicInfo = current;\r\n      if (this.$store.state.isMusicPlayerShow) {\r\n        this.getAudioUrl();\r\n        await this.$store.commit(\"updateIsMusicPlayerShow\", true);\r\n      }\r\n    },\r\n\r\n    // 监听当前音频播放状态\r\n    \"$store.state.musicPlayState\"(current) {\r\n      // 如果不相同 说明在组件之外有地方改变了播放状态，需要将播放状态更新至此组件\r\n      if (current != this.playState) {\r\n        this.playState = current;\r\n        if (current) {\r\n          this.$refs.currentMusicPlayer.play();\r\n        } else {\r\n          this.$refs.currentMusicPlayer.pause();\r\n        }\r\n      }\r\n    },\r\n  },\r\n  filters: {\r\n    handleTime,\r\n  },\r\n  mounted() {\r\n    console.log(\"musicInfo: \", this.currentMusicInfo);\r\n  },\r\n  created() {\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  user-select: none;\r\n}\r\n\r\n.MusicPlayer {\r\n  width: 270px;\r\n  height: 100px;\r\n  background-color: #fff;\r\n  position: absolute;\r\n  z-index: 10;\r\n  left: 290px;\r\n  bottom: 50px;\r\n  padding: 7px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.15);\r\n  border: 1px solid #ccc;\r\n  display: none;\r\n  display: block;\r\n}\r\n\r\n/* .showPlayer {\r\n  display: block;\r\n} */\r\n\r\n.cover {\r\n  width: 70px;\r\n  position: relative;\r\n}\r\n\r\n.cover img {\r\n  width: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n.top {\r\n  display: flex;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.musicInfo {\r\n  margin: 0 8px;\r\n  color: #25262b;\r\n}\r\n\r\n.musicName {\r\n  margin: 10px 0 5px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  width: 130px;\r\n}\r\n\r\n.singer {\r\n  font-size: 13px;\r\n  color: #43454d;\r\n}\r\n\r\n.icon-close {\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 10px;\r\n  font-size: 20px;\r\n  color: #43454d;\r\n  cursor: pointer;\r\n}\r\n\r\n.el-slider {\r\n  padding: 0 3px;\r\n  width: 250px;\r\n}\r\n\r\n.time {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 15px;\r\n  font-size: 12px;\r\n  color: #43454d;\r\n}\r\n\r\n.iconContainer {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.iconContainer i {\r\n  color: #fcfcfc;\r\n  font-size: 32px;\r\n  padding: 5px;\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}