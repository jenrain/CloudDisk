{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport IconTypeList from \"./IconTypeList.vue\";\nexport default {\n  name: \"FolderDialog\",\n  components: {\n    IconTypeList\n  },\n  props: {\n    isFolderDialogShow: {\n      type: Boolean,\n\n      default() {\n        return false;\n      }\n\n    },\n    searchFolder: {\n      type: Object,\n\n      default() {\n        return [];\n      }\n\n    },\n    moveType: {\n      type: String,\n\n      default() {\n        return \"current\";\n      }\n\n    }\n  },\n\n  data() {\n    return {\n      // 显示规则\n      showProps: {\n        children: \"childrenList\",\n        label: data => {\n          return data.name.slice(0, data.name.length - 1);\n        }\n      },\n      //   选中的文件夹名称\n      selectFolder: \"\"\n    };\n  },\n\n  methods: {\n    handleFolderList() {\n      console.log(123);\n    },\n\n    getFullPath(node, path) {\n      if (node != null) {\n        path = node.parent.data.name + path;\n        return this.getFullPath(node.parent, path);\n      } else {\n        return path;\n      }\n    },\n\n    // js递归遍历树形json数据，根据关键字查找节点\n    //@leafId  查找的id，\n    //@nodes   原始Json数据\n    //@path    供递归使用\n    findPathByLeafId(leafId, nodes, path) {\n      if (path === undefined) {\n        path = [];\n      }\n\n      for (var i = 0; i < nodes.length; i++) {\n        var tmpPath = path.concat();\n        tmpPath.push(nodes[i].name);\n\n        if (leafId == nodes[i].name) {\n          return tmpPath;\n        }\n\n        if (nodes[i].childrenList) {\n          var findResult = this.findPathByLeafId(leafId, nodes[i].childrenList, tmpPath);\n\n          if (findResult) {\n            return findResult;\n          }\n        }\n      }\n    },\n\n    handleNodeClick(e, node) {\n      console.log(e, node); //   this.selectFolder = e.parent.name.slice(0, e.parent.name.length - 1);\n\n      let path = (\"/\" + this.findPathByLeafId(e.name, [this.folderList]).join(\"\")).slice(0, this.findPathByLeafId(e.name, [this.folderList]).join(\"\").length); //   console.log(path);\n\n      this.selectFolder = path;\n    },\n\n    // 点击确定的回调\n    confirmMove() {\n      // 关闭选择框\n      this.$emit(\"closeFolderDialog\"); // 将选中的文件夹名称发给父组件\n\n      this.$emit(\"confirmMove\", {\n        path: this.selectFolder,\n        type: this.moveType\n      });\n    }\n\n  },\n  watch: {\n    isFolderDialogShow(current) {\n      if (current) {\n        this.handleFolderList();\n      }\n    }\n\n  },\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":";AA8BA;AAEA;EACAA,oBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;MACAC,aADA;;MAEAC;QACA;MACA;;IAJA,CADA;IAOAC;MACAF,YADA;;MAEAC;QACA;MACA;;IAJA,CAPA;IAaAE;MACAH,YADA;;MAEAC;QACA;MACA;;IAJA;EAbA,CALA;;EAyBAG;IACA;MACA;MACAC;QACAC,wBADA;QAEAC;UACA;QACA;MAJA,CAFA;MASA;MACAC;IAVA;EAYA,CAtCA;;EAuCAC;IACAC;MACAC;IACA,CAHA;;IAKAC;MACA;QACAC;QACA;MACA,CAHA,MAGA;QACA;MACA;IACA,CAZA;;IAcA;IACA;IACA;IACA;IACAC;MACA;QACAD;MACA;;MACA;QACA;QACAE;;QACA;UACA;QACA;;QACA;UACA,uCACAC,MADA,EAEAC,qBAFA,EAGAF,OAHA;;UAKA;YACA;UACA;QACA;MACA;IACA,CAvCA;;IAyCAG;MACAP,qBADA,CAEA;;MACA,YACA,+DADA,EAEAQ,KAFA,CAGA,CAHA,EAIA,gEAJA,EAHA,CASA;;MACA;IACA,CApDA;;IAsDA;IACAC;MACA;MACA,gCAFA,CAGA;;MACA;QACAP,uBADA;QAEAb;MAFA;IAIA;;EA/DA,CAvCA;EAwGAqB;IACAtB;MACA;QACA;MACA;IACA;;EALA,CAxGA;;EA+GAuB;;AA/GA","names":["name","components","IconTypeList","props","isFolderDialogShow","type","default","searchFolder","moveType","data","showProps","children","label","selectFolder","methods","handleFolderList","console","getFullPath","path","findPathByLeafId","tmpPath","leafId","nodes","handleNodeClick","slice","confirmMove","watch","mounted"],"sourceRoot":"src/components","sources":["FolderDialog.vue"],"sourcesContent":["<template>\r\n  <div class=\"FolderDialog\">\r\n    <el-dialog\r\n      title=\"移动到\"\r\n      width=\"400px\"\r\n      :visible.sync=\"isFolderDialogShow\"\r\n      @close=\"$emit('closeFolderDialog')\"\r\n    >\r\n      <el-tree\r\n        highlight-current\r\n        :data=\"[searchFolder]\"\r\n        :props=\"showProps\"\r\n        @node-click=\"handleNodeClick\"\r\n      ></el-tree>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button\r\n          @click=\"$emit('closeFolderDialog')\"\r\n          size=\"mini\"\r\n          class=\"cancel\"\r\n          >取 消</el-button\r\n        >\r\n        <el-button @click=\"confirmMove\" size=\"mini\" class=\"confirm\"\r\n          >确 定</el-button\r\n        >\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport IconTypeList from \"./IconTypeList.vue\";\r\n\r\nexport default {\r\n  name: \"FolderDialog\",\r\n  components: {\r\n    IconTypeList,\r\n  },\r\n  props: {\r\n    isFolderDialogShow: {\r\n      type: Boolean,\r\n      default() {\r\n        return false;\r\n      },\r\n    },\r\n    searchFolder: {\r\n      type: Object,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    moveType: {\r\n      type: String,\r\n      default() {\r\n        return \"current\";\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 显示规则\r\n      showProps: {\r\n        children: \"childrenList\",\r\n        label: (data) => {\r\n          return data.name.slice(0, data.name.length - 1);\r\n        },\r\n      },\r\n\r\n      //   选中的文件夹名称\r\n      selectFolder: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    handleFolderList() {\r\n      console.log(123);\r\n    },\r\n\r\n    getFullPath(node, path) {\r\n      if (node != null) {\r\n        path = node.parent.data.name + path;\r\n        return this.getFullPath(node.parent, path);\r\n      } else {\r\n        return path;\r\n      }\r\n    },\r\n\r\n    // js递归遍历树形json数据，根据关键字查找节点\r\n    //@leafId  查找的id，\r\n    //@nodes   原始Json数据\r\n    //@path    供递归使用\r\n    findPathByLeafId(leafId, nodes, path) {\r\n      if (path === undefined) {\r\n        path = [];\r\n      }\r\n      for (var i = 0; i < nodes.length; i++) {\r\n        var tmpPath = path.concat();\r\n        tmpPath.push(nodes[i].name);\r\n        if (leafId == nodes[i].name) {\r\n          return tmpPath;\r\n        }\r\n        if (nodes[i].childrenList) {\r\n          var findResult = this.findPathByLeafId(\r\n            leafId,\r\n            nodes[i].childrenList,\r\n            tmpPath\r\n          );\r\n          if (findResult) {\r\n            return findResult;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    handleNodeClick(e, node) {\r\n      console.log(e, node);\r\n      //   this.selectFolder = e.parent.name.slice(0, e.parent.name.length - 1);\r\n      let path = (\r\n        \"/\" + this.findPathByLeafId(e.name, [this.folderList]).join(\"\")\r\n      ).slice(\r\n        0,\r\n        this.findPathByLeafId(e.name, [this.folderList]).join(\"\").length\r\n      );\r\n      //   console.log(path);\r\n      this.selectFolder = path;\r\n    },\r\n\r\n    // 点击确定的回调\r\n    confirmMove() {\r\n      // 关闭选择框\r\n      this.$emit(\"closeFolderDialog\");\r\n      // 将选中的文件夹名称发给父组件\r\n      this.$emit(\"confirmMove\", {\r\n        path: this.selectFolder,\r\n        type: this.moveType,\r\n      });\r\n    },\r\n  },\r\n  watch: {\r\n    isFolderDialogShow(current) {\r\n      if (current) {\r\n        this.handleFolderList();\r\n      }\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.FolderDialog /deep/ .el-dialog {\r\n  border-radius: 10px;\r\n}\r\n\r\n.FolderDialog /deep/ .el-dialog__header {\r\n  border-bottom: 1px solid #eee;\r\n  padding: 10px 20px;\r\n}\r\n\r\n.FolderDialog /deep/ .el-dialog__title {\r\n  font-size: 15px;\r\n  color: rgb(95, 95, 95);\r\n}\r\n\r\n.FolderDialog /deep/ .el-dialog__body {\r\n  height: 100px;\r\n  overflow-y: scroll;\r\n  padding: 15px;\r\n}\r\n\r\n.FolderDialog /deep/ .el-tree-node__content {\r\n  height: 30px;\r\n}\r\n\r\n.FolderDialog /deep/ .el-tree-node__content:hover {\r\n  background-color: #f0f0fc;\r\n}\r\n\r\n.FolderDialog /deep/ .is-current > .el-tree-node__content {\r\n  background-color: #e6e6f5;\r\n}\r\n\r\n.cancel:hover {\r\n  background-color: white;\r\n  color: #696bcc;\r\n  border-color: #a8a9d4;\r\n}\r\n\r\n.confirm {\r\n  background-color: #7c7dd1;\r\n  border-color: #7c7dd1;\r\n  color: white;\r\n}\r\n\r\n.confirm:hover {\r\n  background-color: #6d6fce;\r\n}\r\n\r\n.FolderDialog /deep/ .el-button:focus {\r\n  background-color: #7c7dd1 !important;\r\n  color: white !important;\r\n  border-color: #7c7dd1 !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}