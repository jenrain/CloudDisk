{"ast":null,"code":"export function handleTime(time) {\n  time = Math.floor(time);\n  let m = Math.floor(time / 60);\n  let s = Math.floor(time % 60);\n  m = m < 10 ? '0' + m : m;\n  s = s < 10 ? '0' + s : s;\n  return m + ':' + s;\n} // 处理超过n位的字符串\n\nexport function handleLongString(str, fs = 10, bs = 10, n = 30) {\n  if (str.length < n) {\n    return str;\n  }\n\n  let front = str.slice(0, fs);\n  let behind = str.slice(-bs);\n  return front + '...' + behind;\n} // 处理相册时间显示\n\nexport function handleAlbumDateShow(date) {\n  let myDate = new Date();\n  let currentYear = myDate.getFullYear();\n  let currentMonth = myDate.getMonth() + 1;\n  let currentDay = myDate.getDate();\n  let arr = date.split('-');\n  arr[0] = parseInt(arr[0]);\n  arr[1] = parseInt(arr[1]);\n  arr[2] = parseInt(arr[2]); // 判断是否是今天\n\n  if (arr[0] == currentYear && arr[1] == currentMonth && arr[2] == currentDay) {\n    return '今天';\n  }\n\n  if (arr[0] == currentYear) {\n    return arr[1] + '月' + arr[2] + '日';\n  } else {\n    return arr[0] + '年' + arr[1] + '月' + arr[2] + '日';\n  }\n} // 判断文件类型并返回对应图标img名称\n\nexport function getTypeIcon(type) {\n  // word\n  if (type == \"doc\" || type == \"docx\") {\n    return 'word';\n  } // excel\n  else if (type == \"xlsx\" || type == \"xls\") {\n    return 'excel';\n  } // txt\n  else if (type == \"txt\") {\n    return 'txt';\n  } // pdf\n  else if (type == \"pdf\") {\n    return 'pdf';\n  } // zip\n  else if (type == \"zip\" || type == \"7z\" || type == \"rar\" || type == \"jar\") {\n    return 'zip';\n  } // ppt\n  else if (type == \"ppt\" || type == \"pptx\") {\n    return 'ppt';\n  } // unknown\n  else {\n    return 'unknown';\n  }\n}","map":{"version":3,"names":["handleTime","time","Math","floor","m","s","handleLongString","str","fs","bs","n","length","front","slice","behind","handleAlbumDateShow","date","myDate","Date","currentYear","getFullYear","currentMonth","getMonth","currentDay","getDate","arr","split","parseInt","getTypeIcon","type"],"sources":["D:/1Project/GoProject/CloudDisk/CloudDiskFront/src/plugins/utils.js"],"sourcesContent":["export function handleTime(time) {\r\n    time = Math.floor(time);\r\n    let m = Math.floor(time / 60);\r\n    let s = Math.floor(time % 60);\r\n    m = m < 10 ? '0' + m : m;\r\n    s = s < 10 ? '0' + s : s;\r\n    return m + ':' + s;\r\n}\r\n\r\n// 处理超过n位的字符串\r\nexport function handleLongString(str, fs = 10, bs = 10, n = 30) {\r\n    if (str.length < n) {\r\n        return str;\r\n    }\r\n    let front = str.slice(0, fs);\r\n    let behind = str.slice(-bs);\r\n    return front + '...' + behind;\r\n}\r\n\r\n// 处理相册时间显示\r\nexport function handleAlbumDateShow(date) {\r\n    let myDate = new Date();\r\n    let currentYear = myDate.getFullYear()\r\n    let currentMonth = myDate.getMonth() + 1\r\n    let currentDay = myDate.getDate()\r\n\r\n    let arr = date.split('-')\r\n    arr[0] = parseInt(arr[0])\r\n    arr[1] = parseInt(arr[1])\r\n    arr[2] = parseInt(arr[2])\r\n\r\n    // 判断是否是今天\r\n    if (arr[0] == currentYear && arr[1] == currentMonth && arr[2] == currentDay) {\r\n        return '今天'\r\n    }\r\n\r\n    if (arr[0] == currentYear) {\r\n        return arr[1] + '月' + arr[2] + '日'\r\n    } else {\r\n        return arr[0] + '年' + arr[1] + '月' + arr[2] + '日'\r\n    }\r\n}\r\n\r\n// 判断文件类型并返回对应图标img名称\r\nexport function getTypeIcon(type) {\r\n    // word\r\n    if (type == \"doc\" || type == \"docx\") {\r\n        return 'word'\r\n    }\r\n    // excel\r\n    else if (type == \"xlsx\" || type == \"xls\") {\r\n        return 'excel'\r\n    }\r\n    // txt\r\n    else if (type == \"txt\") {\r\n        return 'txt'\r\n    }\r\n    // pdf\r\n    else if (type == \"pdf\") {\r\n        return 'pdf'\r\n    }\r\n    // zip\r\n    else if (\r\n        type == \"zip\" ||\r\n        type == \"7z\" ||\r\n        type == \"rar\" ||\r\n        type == \"jar\"\r\n    ) {\r\n        return 'zip'\r\n    }\r\n    // ppt\r\n    else if (type == \"ppt\" || type == \"pptx\") {\r\n        return 'ppt'\r\n    }\r\n    // unknown\r\n    else {\r\n        return 'unknown'\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}