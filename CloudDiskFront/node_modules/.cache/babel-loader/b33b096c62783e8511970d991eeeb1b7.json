{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FunctionBar from \"../components/FunctionBar.vue\";\nimport IconTypeList from '../components/IconTypeList.vue';\nexport default {\n  name: \"Files\",\n\n  data() {\n    return {\n      listData: [],\n      folderList: {},\n      // 是否已经被创建\n      // isCreated: false,\n      // 排序方式\n      sortType: \"time\",\n      // 展示方式 icon table\n      showType: \"icon\",\n      // 搜索的文件夹\n      searchFolder: []\n    };\n  },\n\n  components: {\n    FunctionBar,\n    IconTypeList\n  },\n  methods: {\n    // 请求文件列表\n    async getListData() {\n      if (this.$route.params.path.search(\"search\") !== -1) return;\n      let res = await this.$request(`/educenter/file/getCurDirFiles/${this.$store.state.userInfo.id}`, this.$route.params.path, \"post\", \"params\", \"json\");\n      console.log(res, 63);\n\n      if (res.data.success) {\n        if (this.$store.state.sortType == \"size\") {\n          res.data.data.files.sort((a, b) => {\n            return a.size - b.size;\n          });\n        }\n\n        this.listData = res.data.data.files;\n        await this.getVideoList(res.data.data.files);\n      } else {\n        this.$message.error(\"获取文件列表失败,请刷新页面重试!\");\n      }\n    },\n\n    // 获取文件目录树\n    async getFolderList(dir) {\n      if (!dir) {\n        console.log(81);\n        let res = await this.$request(\"/educenter/dir/getUserDir\", {\n          id: this.$store.state.userInfo.id\n        });\n\n        if (res.data.data.dir == null) {\n          this.$router.replace(\"/login\");\n          return;\n        } // console.log(res);\n        // console.log(JSON.parse(res.data.data.dir.memDir));\n\n\n        this.folderList = JSON.parse(res.data.data.dir.memDir);\n        this.$store.commit(\"updateFolderList\", JSON.parse(res.data.data.dir.memDir));\n        this.$store.commit(\"updateIsGetingFolder\", false);\n      } else {\n        this.folderList = JSON.parse(dir);\n        this.$store.commit(\"updateFolderList\", JSON.parse(dir));\n        this.$store.commit(\"updateIsGetingFolder\", false);\n      }\n    },\n\n    // 获取当前文件中的所有video文件\n    getVideoList(listData) {\n      listData.forEach(async (item, index, arr) => {\n        if (item.filetype === \"video\") {\n          // console.log(\"调用了这里\");\n          arr[index].url = await this.getVideoUrl(item.videoId);\n        }\n      }); // console.log(this.videoList);\n    },\n\n    // 根据传入videoId获取url\n    async getVideoUrl(videoId) {\n      let res = await this.$request(\"/eduoss/fileoss/getPlayAuth?isList=\" + videoId, \"\", \"post\"); // console.log(res);\n\n      return res.data.data.urlList[0].url;\n    },\n\n    // 将上传成功的对象push到当前listData中\n    async pushUploadData(item) {\n      if (item.filetype == \"video\") {\n        item.url = await this.getVideoUrl(item.videoId);\n      }\n\n      this.listData.push(item);\n    },\n\n    // 搜索\n    goSearch(content) {\n      // 如果路径中已经有搜索了 则替换之前的路径\n      let path;\n\n      if (this.$store.state.currentFolder.search(\"search\") != -1) {\n        path = this.$store.state.currentFolder.split(\"/search\")[0];\n      } else {\n        path = this.$store.state.currentFolder;\n        console.log(131);\n      }\n\n      console.log(path);\n      this.$router.push({\n        name: \"files\",\n        params: {\n          path: path + `/search?${content}`\n        }\n      });\n    }\n\n  },\n\n  async created() {\n    this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n    this.$axios({\n      url: \"/user/file/list\",\n      method: \"post\" // data: {\n      // }\n\n    }).then(res => {\n      console.log(res.data);\n\n      if (res.data.success) {\n        this.$message.success(\"文件请求成功!\");\n        this.listData = res.data.files_list;\n        this.searchFolder = res.data.folder_list;\n        console.log(this.searchFolder[0].name);\n      } else {\n        this.$message.error(\"文件请求失败\");\n      }\n    });\n  },\n\n  watch: {}\n};","map":{"version":3,"mappings":";AA+BA;AACA;AACA;EACAA,aADA;;EAEAC;IACA;MACAC,YADA;MAEAC,cAFA;MAGA;MACA;MACA;MACAC,gBANA;MAOA;MACAC,gBARA;MASA;MACAC;IAVA;EAYA,CAfA;;EAgBAC;IACAC,WADA;IAEAC;EAFA,CAhBA;EAoBAC;IACA;IACA;MACA;MACA,8BACA,iEADA,EAEA,uBAFA,EAGA,MAHA,EAIA,QAJA,EAKA,MALA;MAOAC;;MACA;QACA;UACAC;YACA;UACA,CAFA;QAGA;;QACA;QACA;MACA,CARA,MAQA;QACA;MACA;IACA,CAvBA;;IAyBA;IACA;MACA;QACAD;QACA;UACAE;QADA;;QAGA;UACA;UACA;QACA,CARA,CASA;QACA;;;QAEA;QACA,mBACA,kBADA,EAEAC,oCAFA;QAIA;MACA,CAlBA,MAkBA;QACA;QACA;QACA;MACA;IACA,CAlDA;;IAoDA;IACAC;MACAb;QACA;UACA;UACAc;QACA;MACA,CALA,EADA,CAOA;IACA,CA7DA;;IA+DA;IACA;MACA,8BACA,+CADA,EAEA,EAFA,EAGA,MAHA,EADA,CAMA;;MACA;IACA,CAxEA;;IA0EA;IACA;MACA;QACAC;MACA;;MACA;IACA,CAhFA;;IAkFA;IACAC;MACA;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;QACAR;MACA;;MACAA;MACA;QACAX,aADA;QAEAoB;UACAD;QADA;MAFA;IAMA;;EAnGA,CApBA;;EAyHA;IACA;IACA;MACAE,sBADA;MAEAC,cAFA,CAGA;MAEA;;IALA,GAMAC,IANA,CAMAX;MACAD;;MACA;QACA;QACA;QACA;QACAA;MACA,CALA,MAKA;QACA;MACA;IACA,CAhBA;EAiBA,CA5IA;;EA6IAa;AA7IA","names":["name","data","listData","folderList","sortType","showType","searchFolder","components","FunctionBar","IconTypeList","methods","console","res","id","JSON","getVideoList","arr","item","goSearch","path","params","url","method","then","watch"],"sourceRoot":"src/components","sources":["Files.vue"],"sourcesContent":["<template>\r\n    <div class=\"Files\">\r\n      <function-bar\r\n        @pushUploadData=\"pushUploadData\"\r\n        @multDelete=\"$refs.iconTypeList.deleteCurrentFile('mult')\"\r\n        @multDownload=\"$refs.iconTypeList.downloadCurrentFile('mult')\"\r\n        @multMove=\"$refs.iconTypeList.moveFile('mult')\"\r\n        @changeSortType=\"(type) => (sortType = type)\"\r\n        @changShowType=\"(type) => (showType = type)\"\r\n        @goSearch=\"goSearch\"\r\n        @multCollect=\"\r\n          (flag) => {\r\n            $refs.iconTypeList.collectCurrentFile(flag, 'mult');\r\n          }\r\n        \"\r\n      ></function-bar>\r\n      <icon-type-list\r\n      :listData=\"listData\"\r\n      :folderList=\"folderList\"\r\n      :sortType=\"sortType\"\r\n      :showType=\"showType\"\r\n      :searchFolder=\"searchFolder\"\r\n      @getListData=\"getListData\"\r\n      @getFolderList=\"getFolderList\"\r\n      ref=\"iconTypeList\"\r\n      >\r\n      </icon-type-list>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import FunctionBar from \"../components/FunctionBar.vue\";\r\n  import IconTypeList from '../components/IconTypeList.vue';\r\n  export default {\r\n    name: \"Files\",\r\n    data() {\r\n      return {\r\n        listData: [],\r\n        folderList: {},\r\n        // 是否已经被创建\r\n        // isCreated: false,\r\n        // 排序方式\r\n        sortType: \"time\",\r\n        // 展示方式 icon table\r\n        showType: \"icon\",\r\n        // 搜索的文件夹\r\n        searchFolder: [],\r\n      };\r\n    },\r\n    components: {\r\n      FunctionBar,\r\n        IconTypeList,\r\n    },\r\n    methods: {\r\n          // 请求文件列表\r\n    async getListData() {\r\n      if (this.$route.params.path.search(\"search\") !== -1) return;\r\n      let res = await this.$request(\r\n        `/educenter/file/getCurDirFiles/${this.$store.state.userInfo.id}`,\r\n        this.$route.params.path,\r\n        \"post\",\r\n        \"params\",\r\n        \"json\"\r\n      );\r\n      console.log(res, 63);\r\n      if (res.data.success) {\r\n        if (this.$store.state.sortType == \"size\") {\r\n          res.data.data.files.sort((a, b) => {\r\n            return a.size - b.size;\r\n          });\r\n        }\r\n        this.listData = res.data.data.files;\r\n        await this.getVideoList(res.data.data.files);\r\n      } else {\r\n        this.$message.error(\"获取文件列表失败,请刷新页面重试!\");\r\n      }\r\n    },\r\n\r\n    // 获取文件目录树\r\n    async getFolderList(dir) {\r\n      if (!dir) {\r\n        console.log(81);\r\n        let res = await this.$request(\"/educenter/dir/getUserDir\", {\r\n          id: this.$store.state.userInfo.id,\r\n        });\r\n        if (res.data.data.dir == null) {\r\n          this.$router.replace(\"/login\");\r\n          return;\r\n        }\r\n        // console.log(res);\r\n        // console.log(JSON.parse(res.data.data.dir.memDir));\r\n\r\n        this.folderList = JSON.parse(res.data.data.dir.memDir);\r\n        this.$store.commit(\r\n          \"updateFolderList\",\r\n          JSON.parse(res.data.data.dir.memDir)\r\n        );\r\n        this.$store.commit(\"updateIsGetingFolder\", false);\r\n      } else {\r\n        this.folderList = JSON.parse(dir);\r\n        this.$store.commit(\"updateFolderList\", JSON.parse(dir));\r\n        this.$store.commit(\"updateIsGetingFolder\", false);\r\n      }\r\n    },\r\n\r\n    // 获取当前文件中的所有video文件\r\n    getVideoList(listData) {\r\n      listData.forEach(async (item, index, arr) => {\r\n        if (item.filetype === \"video\") {\r\n          // console.log(\"调用了这里\");\r\n          arr[index].url = await this.getVideoUrl(item.videoId);\r\n        }\r\n      });\r\n      // console.log(this.videoList);\r\n    },\r\n\r\n    // 根据传入videoId获取url\r\n    async getVideoUrl(videoId) {\r\n      let res = await this.$request(\r\n        \"/eduoss/fileoss/getPlayAuth?isList=\" + videoId,\r\n        \"\",\r\n        \"post\"\r\n      );\r\n      // console.log(res);\r\n      return res.data.data.urlList[0].url;\r\n    },\r\n\r\n    // 将上传成功的对象push到当前listData中\r\n    async pushUploadData(item) {\r\n      if (item.filetype == \"video\") {\r\n        item.url = await this.getVideoUrl(item.videoId);\r\n      }\r\n      this.listData.push(item);\r\n    },\r\n\r\n    // 搜索\r\n    goSearch(content) {\r\n      // 如果路径中已经有搜索了 则替换之前的路径\r\n      let path;\r\n      if (this.$store.state.currentFolder.search(\"search\") != -1) {\r\n        path = this.$store.state.currentFolder.split(\"/search\")[0];\r\n      } else {\r\n        path = this.$store.state.currentFolder;\r\n        console.log(131);\r\n      }\r\n      console.log(path);\r\n      this.$router.push({\r\n        name: \"files\",\r\n        params: {\r\n          path: path + `/search?${content}`,\r\n        },\r\n      });\r\n    },\r\n    },\r\n    async created() {\r\n        this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\r\n        this.$axios({\r\n          url: \"/user/file/list\",\r\n          method: \"post\",\r\n          // data: {\r\n  \r\n          // }\r\n        }).then((res) => {\r\n          console.log(res.data);\r\n          if (res.data.success) {\r\n            this.$message.success(\"文件请求成功!\");\r\n            this.listData = res.data.files_list\r\n            this.searchFolder = res.data.folder_list\r\n            console.log(this.searchFolder[0].name);\r\n          } else {\r\n            this.$message.error(\"文件请求失败\");\r\n          }\r\n        });\r\n    },\r\n    watch: {},\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .Files {\r\n    width: 100%;\r\n  }\r\n  </style>\r\n  "]},"metadata":{},"sourceType":"module"}