{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"UserInfoCard\",\n\n  data() {\n    return {\n      userInfo: {\n        name: null,\n        email: null\n      },\n      // 是否显示menu\n      isMenuShow: false,\n      // 是否显示修改昵称的dialog\n      isNickNameDialogShow: false,\n      // 新的昵称\n      newNickName: \"\",\n      // 是否显示about的dialog\n      isAboutDialogShow: false\n    };\n  },\n\n  methods: {\n    // 点击退出登录的回调\n    logout() {\n      this.showMenu();\n      window.localStorage.removeItem(\"userInfo\");\n      this.$store.commit(\"updateUserInfo\", {});\n      this.$router.push(\"/login\");\n    },\n\n    // 显示菜单\n    showMenu() {\n      // setTimeout(() => {\n      if (this.$store.state.isUserInfoCardMenuShow) {\n        this.$store.state.isUserInfoCardMenuShow = false;\n      } else {\n        this.$store.state.isUserInfoCardMenuShow = true;\n      } // });\n\n\n      console.log(!this.$store.state.isUserInfoCardMenuShow);\n    },\n\n    // 请求用户信息\n    async getUserInfo() {\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\n      this.$axios({\n        url: \"/user/detail\",\n        method: \"post\"\n      }).then(res => {\n        console.log(res.data);\n        this.userInfo.name = res.data.name;\n        this.userInfo.email = res.data.email;\n        this.$store.commit(\"updateUserInfo\", this.userInfo);\n      });\n    },\n\n    // 点击修改昵称的回调\n    changeNickName() {\n      this.showMenu();\n      this.newNickName = this.userInfo.name;\n      this.isNickNameDialogShow = true; // 聚焦输入框\n      // dialog在第一次打开前是不渲染的 所以里面的input需要在下一帧中获取\n\n      this.$nextTick(() => {\n        // console.log([document.querySelector(\".nickNameInput\")]);\n        document.querySelector(\".nickNameInput\").children[0].focus();\n      });\n    },\n\n    // 确认修改昵称\n    async confirmNickName() {\n      // 先判断昵称是否合法\n      if (this.newNickName == \"\") {\n        this.$message.warning(\"昵称不能为空哦!\");\n        return;\n      } else if (this.newNickName == this.userInfo.name) {\n        this.isNickNameDialogShow = false;\n        return;\n      } // 深拷贝对象 以防出现请求没有成功 但是昵称已经在this.userInfo中被修改的情况\n\n\n      let data = JSON.parse(JSON.stringify(this.userInfo));\n      data.nickname = this.newNickName; // 调用此接口以通知后端将上传的文件存入数据库\n\n      this.$axios({\n        url: \"/user/name/update\",\n        method: \"put\",\n        data: {\n          name: this.newNickName\n        }\n      }).then(res => {\n        console.log(res.data);\n\n        if (res.data.success) {\n          this.$message.success(\"昵称修改成功!\"); // 更新用户数据\n\n          this.getUserInfo();\n          this.isNickNameDialogShow = false;\n        } else {\n          this.$message.error(res.data.msg);\n        }\n      });\n    },\n\n    clickAbout() {\n      this.isAboutDialogShow = true;\n    }\n\n  },\n\n  created() {\n    this.getUserInfo();\n  },\n\n  mounted() {},\n\n  computed: {\n    // 内存进度条\n    storageProgress() {\n      return (this.userInfo.neicun / 1048576 / 1024 * 100).toFixed(2) * 1;\n    },\n\n    storageSize() {\n      return (this.userInfo.neicun / 1048576).toFixed(2);\n    }\n\n  },\n  watch: {\n    \"$store.state.userInfo\"(current) {\n      this.userInfo = current;\n    },\n\n    // 上面监听不到内存属性的变化，因为但内存属性发生改变时，userInfo的地址没有发生变化\n    \"$store.state.userInfo.neicun\"(current) {\n      this.userInfo.neicun = current;\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAuEA;EACAA,oBADA;;EAEAC;IACA;MACAC;QACAF,UADA;QAEAG;MAFA,CADA;MAKA;MACAC,iBANA;MAOA;MACAC,2BARA;MASA;MACAC,eAVA;MAWA;MACAC;IAZA;EAcA,CAjBA;;EAkBAC;IACA;IACAC;MACA;MACAC;MACA;MACA;IACA,CAPA;;IASA;IACAC;MACA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA,CANA,CAOA;;;MACAC;IACA,CAnBA;;IAqBA;IACA;MACA;MACA;QACAC,mBADA;QAEAC;MAFA,GAGAC,IAHA,CAGAC;QACAJ;QACA;QACA;QACA;MACA,CARA;IASA,CAjCA;;IAmCA;IACAK;MACA;MACA;MACA,iCAHA,CAKA;MACA;;MACA;QACA;QACAC;MACA,CAHA;IAIA,CA/CA;;IAiDA;IACA;MACA;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA,CARA,CAUA;;;MACA;MACAjB,iCAZA,CAaA;;MACA;QACAY,wBADA;QAEAC,aAFA;QAGAb;UACAD;QADA;MAHA,GAMAe,IANA,CAMAC;QACAJ;;QACA;UACA,iCADA,CAEA;;UACA;UACA;QACA,CALA,MAKA;UACA;QACA;MACA,CAhBA;IAiBA,CAjFA;;IAkFAO;MACA;IACA;;EApFA,CAlBA;;EAwGAC;IACA;EACA,CA1GA;;EA2GAC,YA3GA;;EA4GAC;IACA;IACAC;MACA;IACA,CAJA;;IAKAC;MACA;IACA;;EAPA,CA5GA;EAqHAC;IACA;MACA;IACA,CAHA;;IAIA;IACA;MACA;IACA;;EAPA;AArHA","names":["name","data","userInfo","email","isMenuShow","isNickNameDialogShow","newNickName","isAboutDialogShow","methods","logout","window","showMenu","console","url","method","then","res","changeNickName","document","clickAbout","created","mounted","computed","storageProgress","storageSize","watch"],"sourceRoot":"src/components","sources":["UserInfoCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"UserInfoCard\" v-if=\"userInfo\">\r\n    <div class=\"storageProgressContainer\">\r\n      <div class=\"\">{{ storageSize }}MB/1G</div>\r\n      <el-progress\r\n        :percentage=\"\r\n          storageProgress.toFixed(0) * 1 ? storageProgress.toFixed(0) * 1 : 0\r\n        \"\r\n        :format=\"() => storageProgress + '%'\"\r\n        color=\"#696bcc\"\r\n        class=\"storageProgress\"\r\n      ></el-progress>\r\n    </div>\r\n\r\n    <div class=\"avatar\">\r\n      <img :src=\"userInfo.avatar\" alt=\"\" v-if=\"userInfo.avatar\" />\r\n      <img src=\"../assets/img/avatar.png\" alt=\"\" v-else />\r\n    </div>\r\n    <div class=\"userName\">{{ userInfo.name }}</div>\r\n    <div class=\"menuContainer\">\r\n      <div\r\n        class=\"menu\"\r\n        :class=\"$store.state.isUserInfoCardMenuShow ? 'showMenu' : ''\"\r\n      >\r\n        <div class=\"group\">\r\n          <div class=\"menuItem\" @click=\"changeNickName\">修改昵称</div>\r\n        </div>\r\n        <div class=\"group\">\r\n          <div class=\"menuItem\" @click=\"clickAbout\">关于</div>\r\n        </div>\r\n        <div class=\"group\">\r\n          <div class=\"menuItem\" @click=\"logout\">退出登录</div>\r\n        </div>\r\n      </div>\r\n      <i class=\"iconfont icon-setting\" @click=\"showMenu\"></i>\r\n    </div>\r\n\r\n    <!-- 修改昵称的输入框dialog -->\r\n    <el-dialog\r\n      title=\"修改昵称\"\r\n      :visible.sync=\"isNickNameDialogShow\"\r\n      width=\"400px\"\r\n    >\r\n      <el-input\r\n        v-model=\"newNickName\"\r\n        autocomplete=\"off\"\r\n        class=\"nickNameInput\"\r\n      ></el-input>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"isNickNameDialogShow = false\" size=\"small\"\r\n          >取 消</el-button\r\n        >\r\n        <el-button type=\"primary\" @click=\"confirmNickName\" size=\"small\"\r\n          >确 定</el-button\r\n        >\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- '关于'框dialog -->\r\n    <el-dialog\r\n      title=\"关于666网盘\"\r\n      :visible.sync=\"isAboutDialogShow\"\r\n      width=\"500px\"\r\n      class=\"aboutDialog\"\r\n    >\r\n      使用go-zero + vue + mysql + redis + rabbitmq实现的分布式网盘\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserInfoCard\",\r\n  data() {\r\n    return {\r\n      userInfo: {\r\n        name: null,\r\n        email: null,\r\n      },\r\n      // 是否显示menu\r\n      isMenuShow: false,\r\n      // 是否显示修改昵称的dialog\r\n      isNickNameDialogShow: false,\r\n      // 新的昵称\r\n      newNickName: \"\",\r\n      // 是否显示about的dialog\r\n      isAboutDialogShow: false,\r\n    };\r\n  },\r\n  methods: {\r\n    // 点击退出登录的回调\r\n    logout() {\r\n      this.showMenu();\r\n      window.localStorage.removeItem(\"userInfo\");\r\n      this.$store.commit(\"updateUserInfo\", {});\r\n      this.$router.push(\"/login\");\r\n    },\r\n\r\n    // 显示菜单\r\n    showMenu() {\r\n      // setTimeout(() => {\r\n        if (this.$store.state.isUserInfoCardMenuShow) {\r\n          this.$store.state.isUserInfoCardMenuShow = false;\r\n        } else {\r\n          this.$store.state.isUserInfoCardMenuShow = true;\r\n        }\r\n      // });\r\n      console.log(!this.$store.state.isUserInfoCardMenuShow);\r\n    },\r\n\r\n    // 请求用户信息\r\n    async getUserInfo() {\r\n      this.$axios.defaults.headers.common[\"Authorization\"] = window.localStorage.getItem(\"token\");\r\n      this.$axios({\r\n        url: \"/user/detail\",\r\n        method: \"post\",\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        this.userInfo.name = res.data.name;\r\n        this.userInfo.email = res.data.email;\r\n        this.$store.commit(\"updateUserInfo\", this.userInfo);\r\n      });\r\n    },\r\n\r\n    // 点击修改昵称的回调\r\n    changeNickName() {\r\n      this.showMenu();\r\n      this.newNickName = this.userInfo.name;\r\n      this.isNickNameDialogShow = true;\r\n\r\n      // 聚焦输入框\r\n      // dialog在第一次打开前是不渲染的 所以里面的input需要在下一帧中获取\r\n      this.$nextTick(() => {\r\n        // console.log([document.querySelector(\".nickNameInput\")]);\r\n        document.querySelector(\".nickNameInput\").children[0].focus();\r\n      });\r\n    },\r\n\r\n    // 确认修改昵称\r\n    async confirmNickName() {\r\n      // 先判断昵称是否合法\r\n      if (this.newNickName == \"\") {\r\n        this.$message.warning(\"昵称不能为空哦!\");\r\n        return;\r\n      } else if (this.newNickName == this.userInfo.name) {\r\n        this.isNickNameDialogShow = false;\r\n        return;\r\n      }\r\n\r\n      // 深拷贝对象 以防出现请求没有成功 但是昵称已经在this.userInfo中被修改的情况\r\n      let data = JSON.parse(JSON.stringify(this.userInfo));\r\n      data.nickname = this.newNickName;\r\n      // 调用此接口以通知后端将上传的文件存入数据库\r\n      this.$axios({\r\n        url: \"/user/name/update\",\r\n        method: \"put\",\r\n        data: {\r\n          name: this.newNickName\r\n        }\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.success) {\r\n          this.$message.success(\"昵称修改成功!\");\r\n          // 更新用户数据\r\n          this.getUserInfo();\r\n          this.isNickNameDialogShow = false;\r\n        } else {\r\n          this.$message.error(res.data.msg);\r\n        }\r\n      });\r\n    },\r\n    clickAbout() {\r\n      this.isAboutDialogShow = true\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserInfo();\r\n  },\r\n  mounted() {},\r\n  computed: {\r\n    // 内存进度条\r\n    storageProgress() {\r\n      return ((this.userInfo.neicun / 1048576 / 1024) * 100).toFixed(2) * 1;\r\n    },\r\n    storageSize() {\r\n      return (this.userInfo.neicun / 1048576).toFixed(2);\r\n    },\r\n  },\r\n  watch: {\r\n    \"$store.state.userInfo\"(current) {\r\n      this.userInfo = current;\r\n    },\r\n    // 上面监听不到内存属性的变化，因为但内存属性发生改变时，userInfo的地址没有发生变化\r\n    \"$store.state.userInfo.neicun\"(current) {\r\n      this.userInfo.neicun = current;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.UserInfoCard {\r\n  height: 75px;\r\n  width: 240px;\r\n  border-top: 1px solid #ccc;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  color: #25262b;\r\n  position: relative;\r\n}\r\n\r\n.storageProgressContainer {\r\n  position: absolute;\r\n  top: -45px;\r\n  left: 25px;\r\n  width: 100%;\r\n  font-size: 13px;\r\n}\r\n\r\n.storageProgress {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 85%;\r\n  align-items: center;\r\n  margin-top: 5px;\r\n}\r\n\r\n.storageProgress /deep/ .el-progress__text {\r\n  font-size: 13px !important;\r\n  margin-left: 12px;\r\n}\r\n\r\n.avatar img {\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n}\r\n\r\n.userName {\r\n  font-size: 14px;\r\n  margin-left: 15px;\r\n  width: 110px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.iconfont {\r\n  font-size: 18px;\r\n  color: rgb(104, 104, 104);\r\n  cursor: pointer;\r\n}\r\n\r\n.menuContainer {\r\n  position: absolute;\r\n  right: 20px;\r\n}\r\n\r\n.menu {\r\n  position: absolute;\r\n  background-color: white;\r\n  /* display: none; */\r\n  bottom: 30px;\r\n  width: 150px;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.1);\r\n  z-index: 3000;\r\n  padding: 5px 5px;\r\n  border-radius: 7px;\r\n  font-size: 15px;\r\n  display: none;\r\n}\r\n\r\n.UserInfoCard /deep/ .el-upload {\r\n  width: 100%;\r\n  cursor: unset;\r\n  text-align: left;\r\n}\r\n\r\n.showMenu {\r\n  display: block;\r\n}\r\n\r\n.group {\r\n  padding: 4px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.group:last-child {\r\n  border: none;\r\n}\r\n\r\n.group > div {\r\n  padding: 4px 20px;\r\n  font-size: 14px;\r\n  color: rgb(70, 70, 70);\r\n  user-select: none;\r\n}\r\n\r\n.group > div:hover {\r\n  background-color: #696bcc;\r\n  color: white;\r\n}\r\n\r\n.UserInfoCard /deep/ .el-dialog {\r\n  border-radius: 10px;\r\n}\r\n\r\n.UserInfoCard /deep/ .aboutDialog {\r\n  line-height: 20px;\r\n}\r\n\r\n.UserInfoCard /deep/ .aboutDialog .el-dialog__body {\r\n  padding-top: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}